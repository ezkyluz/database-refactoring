1. Descargar liquibase
2. Instalar
3. Descomprimir y agregar el PATH la ruta de liquibase
   C:\Program Files\liquibase
4. verificar la instalacion:
   (git bash)
   > liquibase --version

*** Compartan la captura de la version ***
**** 2 minutos ***
5. Loguearse a mysql y crear una bd: 
   > winpty mysql -u root -p
   Q17f4r4qMP!

   > create database ntt_demo_refactor;
   > use ntt_demo_refactor; 

   **NO USAR**
   winpty mysql -u root -pQ17f4r4qMP! -h 0.0.0.0 ntt_demo_refactor < create-schema-mysql.sql

   > cmd.exe /c "mysql -u root -pQ17f4r4qMP! -h 0.0.0.0 ntt_demo_refactor < create-schema-mysql.sql"

   > show tables;

   **************************
   > liquibase --help

   mvn repository y descargar el jar (en mi caso tengo 8.0.21)

   > wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.21/mysql-connector-java-8.0.21.jar
 
   ----
   Utilizar el archivo liquibase.properties, Abrir el archivo y explicarlo
   debe dejarse el valor: changeLogFile: database.changelog.xml

   *Genera la estrucutura de la BD, inicial y eso hay que versionar*
   > liquibase generateChangelog
   Ver los archivos generados... (se genero el archivo database.changelog)
   
   Sacar una copia del archivo y llamarlo master-changelog, modificar el archivo liquibase.properties y cambiar el valor del changeLogFile: master-changelog.xml
   
   Editar el archivo master-changelog y contenga la estructura:
   =====
   <?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:pro="http://www.liquibase.org/xml/ns/pro" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-4.1.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.1.xsd">
    <include file="database.changelog.xml" />
</databaseChangeLog>
   =====

   Ingresar a Mysql y ver las tablas.
   > show tables o por GUI
   aparecen ahi 4 tablas.

   (Se va a sincronizar y crear las tablas tipo elemento de control)
   >liquibase changeLogSync 

   Con eso ya se crean las 2 tablas.

   ===
   INICIANDO CON LOS EJERCICIOS 
   ===
   *Renombrar tablas, verificar archivo rename-tables.xml
   *Agregar include en master-changelog.
   *Antes de ejecutar debe verse las evidencias
   >liquibase update
   *verificar la tabla DATABASECHANGELOG para ver los cambios.

   *Renombrar columnas, verificar archivo rename-columns.yaml
   *Agregar include en master-changelog.
   *Antes de ejecutar debe verse las evidencias
   >liquibase --logLevel=info update
   *verificar la tabla DATABASECHANGELOG para ver los cambios.

   *Merge Columnas, verificar archivo merge-columns.sql
   *Agregar include en master-changelog.
   *Antes de ejecutar debe verse las evidencias
   >liquibase --logLevel=info update
   *verificar la tabla DATABASECHANGELOG para ver los cambios.

   Buscar tag database a la bd en la documentacion de liquibase
   vamos a hacer cambios y vamos a regresar.
   *Colocar el changeSet para el tagDatabase
   *debe verificarse en la tabla DATABASECHANGELOG
   >liquibase --logLevel=info update

   *Split tables, verificar archivo split-table.xml
   *Agregar include en master-changelog.
   *Antes de ejecutar debe verse las evidencias
   >liquibase --logLevel=info update
   *verificar la tabla DATABASECHANGELOG para ver los cambios.


   ROLLBACK 
   >liquibase rollback TAG
   >liquibase rollback version_1.1
   ...Validar datos
   >liquibase update





   


























Renombrar el master changelog en liquibase.properties
agregar master changelog que incluya el file creado

bash: liquibase changeLogSync

rename-tables.xml

luego comando:
bash: liquibase update
bash: liquibase --logLevel=info update

merge columns
liquibase --logLevel=info update


tag database 
se etiqueta para poder reversar.
https://docs.liquibase.com/change-types/community/home.html


liquibase update

ROLLBACK

liquibase rollback version_1.1

split tables.xml

relation-tables.xml

liquibase --logLevel=info update

https://databaserefactoring.com


Enable-WindowsOptionalFeature -Online -FeatureName $("VirtualMachinePlatform", "Microsoft-Windows-Subsystem-Linux")

docker run -d --name jenkinsntt -p 8085:8080 jenkins:2.60.3

docker run --name jenkinsntt -p 8085:8080 jenkins-maven:latest
a021d2edaf604336ae2334eb8b78ada2
administrador jenkins pwd: Q17f4r4qMP!

==== INSTALL JENKIS + MAVEN
FROM jenkins/jenkins:latest
# if we want to install via apt
USER root
RUN apt-get update && apt-get install -y maven
# drop back to the regular jenkins user - good practice
USER jenkins

validar java y maven
mvn -version
echo $JAVA_HOME
java -version

How to configure Maven in Jenkins-

I HOPE BELOW INFORMATION MAY HELP YOU

I. Configure Maven in Jenkins

1. Go to Jenkins Dashboard ->Manage Jenkins ->Manage plugins ->Available ->Maven Integration ->Install

2. Go to Manage Jenkins->Global tool configuration->Maven -> Add Maven_home variable value (i.e. path of the maven file on your system).

3. Go to Jenkins Dashboard -> New Item -> Maven Project option will be available

II. Build a Maven project

Go to Jenkins Dashboard -> New Item -> Choose name for the Maven Project (e.g. MyFirstMavenExample)

